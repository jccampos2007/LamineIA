openapi: 3.0.3
info:
  title: WS LamineIA - OpenAPI 3.0  
  version: 0.0.1
servers:  
  - url: http://localhost:4800     
  - url: https://wslamineia.gosmartcrm.com:4800
tags:
  - name: auth
    description: Identification   
  - name: user
    description: Administration   
  - name: test
    description: Administration   
paths:
  # module login
  /ws/auth/login:
    post:
      tags:
        - auth
      summary: Login
      description: Session Start.
      operationId: sendLogin
      requestBody:
        description: Init Session
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sendLogin'   
        required: true         
      responses:
        '200':
          description: Ok...!         
        '400':
          description: validation error
  # modulo login      

  # modulo user       
  /ws/user:
    get:
      tags:
        - user
      summary: Get One user.
      description:  One user.
      operationId: userGetOne   
      parameters:          
        - in: query
          name: id
          schema:
            type: integer 
            example : 0
          required: true   
      responses:
        '200':
          description: Ok...!
        '210':
          description: getOne - empty...!
        '400':
          description: validation error  
        '403':
          description: Access Denied...!  
    post:
      tags:
        - user
      summary: Create user.
      description: New user.       
      operationId: adduser
      requestBody:        
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/adduser'   
        required: true         
      responses:
        '201':
          description: Created...!
        '400':
          description: validation error
        '403':
          description: Access Denied...!  
    put:
      tags:
        - user
      summary: Update user.
      description: Modify user.       
      operationId: updateuser
      requestBody:        
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateuser'   
        required: true         
      responses:
        '200':
          description: Ok / Update user...!
        '400':
          description: validation error / Sql Errors
        '403':
          description: Access Denied...!  
    delete:
      tags:
        - user
      summary: Delete user.
      description: delete 
      operationId: deleteuser.
      parameters:         
        - in: query
          name: id
          schema:
            type: integer 
            example : 0
          required: true             
      responses:
        '200':
          description: Ok...!
        '400':
          description: validation error
        '403':
          description: Access Denied...!    
  # modulo user 

  # modulo test       
  /ws/test:
    get:
      tags:
        - test
      summary: Get One user.
      description:  One user.
      operationId: userGetOne   
      parameters:          
        - in: query
          name: id
          schema:
            type: integer 
            example : 0
          required: true   
      responses:
        '200':
          description: Ok...!
        '210':
          description: getOne - empty...!
        '400':
          description: validation error  
        '403':
          description: Access Denied...!  
    post:
      tags:
        - test
      summary: Create user.
      description: New user.       
      operationId: adduser
      requestBody:        
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/adduser'   
        required: true         
      responses:
        '201':
          description: Created...!
        '400':
          description: validation error
        '403':
          description: Access Denied...!  
    put:
      tags:
        - test
      summary: Update user.
      description: Modify user.       
      operationId: updateuser
      requestBody:        
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateuser'   
        required: true         
      responses:
        '200':
          description: Ok / Update user...!
        '400':
          description: validation error / Sql Errors
        '403':
          description: Access Denied...!  
    delete:
      tags:
        - test
      summary: Delete user.
      description: delete 
      operationId: deleteuser.
      parameters:         
        - in: query
          name: id
          schema:
            type: integer 
            example : 0
          required: true             
      responses:
        '200':
          description: Ok...!
        '400':
          description: validation error
        '403':
          description: Access Denied...!    
  # modulo test 
#//////////////////////////////////////////////////////////////////////////////////////////          
components:
  schemas:
    sendLogin:
      type: object
      properties:
        email:
          type: string          
          example: user@gmail.com
        otp:
          type: string
          example: 123456
    adduser:
      type: object
      properties:
        email:
          type: string          
          example: "user@gmail.com"
    updateuser:
      type: object
      properties:
        id:
          type: integer
          example: 100
        email:
          type: string          
          example: "user@gmail.com"
 
    changeStatus:
      type: object
      properties:
        id:
          type: integer          
          example: 15    
        status:
          type: integer          
          example: 1        
      type: object

  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer                     
         

security:
  - bearerAuth: []
